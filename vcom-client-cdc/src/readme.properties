
编译：

mvn clean package -DskipTests

# **mysql到其他数据库数据库【mysql,oceanbase】**


##源数据库mysql
##MySQL 数据库服务器的 IP 地址或主机名。
hostname=192.168.180.233
##MySQL 数据库服务器的整数端口号。
port=4417
#连接到 MySQL 数据库服务器时要使用的 MySQL 用户的名称。
username=admin
#连接 MySQL 数据库服务器时使用的密码。
password=admin@123


#要监视的 MySQL 服务器的数据库名称。数据库名称还支持正则表达式，以监视多个与正则表达式匹配的表。
database-name=mysqltoob

#需要监视的 MySQL 数据库的表名。表名支持正则表达式，以监视满足正则表达式的多个表。注意：MySQL CDC 连接器在正则匹配表名时，会把用户填写的 database-name， table-name 通过字符串 `\\.` 连接成一个全路径的正则表达式，然后使用该正则表达式和 MySQL 数据库中表的全限定名进行正则匹配
table-name=mysqltoob.*

#读取数据使用的 server id，server id 可以是个整数或者一个整数范围，比如 '5400' 或 '5400-5408', 建议在 'scan.incremental.snapshot.enabled' 参数为启用时，配置成整数范围。因为在当前 MySQL 集群中运行的所有 slave 节点，标记每个 salve 节点的 id 都必须是唯一的。 所以当连接器加入 MySQL 集群作为另一个 slave 节点（并且具有唯一 id 的情况下），它就可以读取 binlog。 默认情况下，连接器会在 5400 和 6400 之间生成一个随机数，但是我们建议用户明确指定 Server id。
server-id=
#增量快照是一种读取表快照的新机制，与旧的快照机制相比， 增量快照有许多优点，包括： （1）在快照读取期间，Source 支持并发读取， （2）在快照读取期间，Source 支持进行 chunk 粒度的 checkpoint， （3）在快照读取之前，Source 不需要数据库锁权限。 如果希望 Source 并行运行，则每个并行 Readers 都应该具有唯一的 Server id，所以 Server id 必须是类似 `5400-6400` 的范围，并且该范围必须大于并行度。 请查阅 增量快照读取 章节了解更多详细信息。
scan.incremental.snapshot.enabled=true
#表快照的块大小（行数），读取表的快照时，捕获的表被拆分为多个块。默认8096
scan.incremental.snapshot.chunk.size=8096
#读取表快照时每次读取数据的最大条数。默认1024
scan.snapshot.fetch.size=1024


#--------------------------------
#目标数据库
dest.jdbc.url=jdbc:mysql://192.168.180.234:2883/?useUnicode=true&useSSL=false&serverTimezone=Asia/Shanghai&characterEncoding=utf-8&allowMultiQueries=true&rewriteBatchedStatements=true&connectTimeout=300000
dest.jdbc.username=root@mq_t1
dest.jdbc.password=vcom123456
dest.jdbc.driver=com.mysql.jdbc.Driver

#执行异常的最大重试次数
dest.jdbc.batch.maxTryNum=3;
#每批插入最大大小
dest.jdbc.batch.batchSize=5000
#批量定时的频率
dest.jdbc.batch.batchIntervalMs=2000

#到oceanbase 注意设置一下执行最大时间us,20秒
#用于设置查询超时时间，单位是微秒。
SET ob_query_timeout = 300000000;
SET GLOBAL ob_query_timeout = 300000000;
# **oceanbase到其他数据库[mysql,oceanbase]**


#源数据库 oceanbase

# OceanBase root 服务器列表，服务器格式为 `ip:rpc_port:sql_port`，多个服务器地址使用英文分号 `;` 隔开，OceanBase 社区版本必填。
rootserver-list=192.168.180.231:2882:2881;192.168.180.232:2882:2881;192.168.180.233:2882:2881
#initial latest-offset timestamp
startup.mode=initial
username=root@mq_t1
password=vcom123456
#租户
tenantName=mq_t1
#待监控 OceanBase 数据库的全路径的表名列表，逗号分隔，如："db1.table1, db2.table2"。
tableList=test_ob_to_mysql.tbl1,test_ob_to_mysql.tbl2,test_ob_to_mysql.tb3
#OceanBase 数据库或 OceanBbase 代理 ODP 的 IP 地址或主机名。
hostname=192.168.180.234
#OceanBase 数据库服务器的整数端口号。可以是 OceanBase 服务器的 SQL 端口号（默认值为 2881）
#或 OceanBase代理服务的端口号（默认值为 2883）
port=2883
#连接器在尝试连接到 OceanBase 数据库服务器超时前的最长时间，单位秒。
connect.timeout=30000
#数据库服务器中的会话时区，用户控制 OceanBase 的时间类型如何转换为 STRING。
#合法的值可以是格式为"±hh:mm"的 UTC 时区偏移量，
#如果 mysql 数据库中的时区信息表已创建，合法的值则可以是创建的时区。
server-time-zone=+08:00
#OceanBase 日志代理服务 的 IP 地址或主机名。
logproxy.host=192.168.180.234
#OceanBase 日志代理服务 的端口号。
logproxy.port=2983
#日志代理中 `libobcdc` 的工作模式 , 可以是 `storage` 或 `memory`。
working-mode=storage
#兼容模式
compatibleMode=mysql
jdbc.driver=com.mysql.jdbc.Driver

#--------------------------------
#目标数据库
dest.jdbc.url=jdbc:mysql://192.168.180.233:4417/?useUnicode=true&useSSL=false&serverTimezone=Asia/Shanghai&characterEncoding=utf-8&allowMultiQueries=true&rewriteBatchedStatements=true&connectTimeout=300000
dest.jdbc.username=admin
dest.jdbc.password=admin@123
dest.jdbc.driver=com.mysql.jdbc.Driver




把上述配置好，放入文件直接执行：

提交任务
./flink/bin/flink run  -d  -c com.zzvcom.cdc.mysql.MySqlDataStreamJob  /home/admin/flinkinstall/vcom-client-cdc-1.0.0.jar  /home/admin/flinkinstall/MysqlToJdbc.properties


./flink/bin/flink run  -d  -c com.zzvcom.cdc.oceanbase.OceanBaseDataStreamJob  /home/admin/flinkinstall/vcom-client-cdc-1.0.0.jar  /home/admin/flinkinstall/OceanbaseToJdbc.properties


查看任务

[root@qg-cdh4 flinkinstall]# flink/bin/flink  list
------------------ Running/Restarting Jobs -------------------
02.08.2023 11:04:56 : e8af8347f02ac59ae4f71bd8495c19e5 : oceanbasecdc[test_ob_to_mysql],cfgfile=/home/admin/flinkinstall/OceanbaseToJdbc.properties (RUNNING)
02.08.2023 11:05:13 : 673235201f0acc11dd738d1e0ca621a9 : mysqlcdcfile=/home/admin/flinkinstall/MysqlToJdbc.properties (RUNNING)

去掉任务
--------------------------------------------------------------
flink/bin/flink  cancel 673235201f0acc11dd738d1e0ca621a9



测试1

/home/admin/flink/bin/flink run  -d  -c com.zzvcom.cdc.mysql.MySqlDataStreamJob  /home/admin/cdcconfig/vcom-client-cdc-1.0.0.jar  /home/admin/cdcconfig/TestMysqlToJdbc.properties



